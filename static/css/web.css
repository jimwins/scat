:root {
  --text-color: #111;

  --primary-color: #c45417;
  --primary-color-r: 230;
  --primary-color-g: 106;
  --primary-color-b: 37;
  --link-color: #2c679b;

  --light-primary-color: rgba(var(--primary-color-r), var(--primary-color-g), var(--primary-color-b), 0.2);

  --input-border: #e66a25;
  --input-focus-h: 21;
  --input-focus-s: 79%;
  --input-focus-l: 52%;

  --border-width: 1px;
  --border-radius: 8px;

  --select-border: #777;
  --select-focus: blue;
  --select-arrow: var(--select-border);
}

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
*,::after,::before{box-sizing:border-box}html{-moz-tab-size:4;tab-size:4}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}hr{height:0;color:inherit}abbr[title]{text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,'Liberation Mono',Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}

/* default layout, @media (max-width: 600px), basically */
body {
  padding: 1em 2em;
}
header {
}

footer {
  text-align: center;
}
footer ul {
  padding: 0;
}
footer ul li {
  display: inline-block;
  text-align: left;
}
footer li:after {
  content: '\00a0\00a0\2022\00a0\00a0';
}
footer li:last-child:after {
  content: '';
}

/* special rules for only small size */
@media (max-width: 599.98px) {
}

/* horizontal phone, tablet */
@media (min-width: 600px) {
  .mobile-only {
    display: none;
  }
}

/* horizontal tablet, desktop window */
@media (min-width: 900px) {
}

/* desktop */
@media (min-width: 1200px) {
}

/* big honking desktop */
@media (min-width: 1800px) {
}

body {
  min-height: 100vh;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  color: var(--text-color);
}

/* https://stackoverflow.com/a/62109988 */
.visually-hidden {
  border: 0;
  padding: 0;
  margin: 0;
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
  clip: rect(1px, 1px, 1px, 1px); /*maybe deprecated but we need to support legacy browsers */
  clip-path: inset(50%); /*modern browsers, clip-path works inwards from each corner*/
  white-space: nowrap; /* added line to stop words getting smushed together (as they go onto seperate lines and some screen readers do not understand line feeds as a space */
}

/* was body > *, but be explicit to not mess with UserWay elements */
.top-banner, header, style, main, footer {
  --max-width: 1070px;
  width: min(100%, var(--max-width));
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1em;
}

.top-banner {
  position: sticky;
  top: 0; left: 0;
  border: 1px solid red;
  border-radius: var(--border-radius);
  padding: 0.25em 1em;
  background: #fee;
  z-index: 300;
}

img.responsive {
  width: 100%;
  height: auto;
}
img.icon {
  width: 16px;
}

main {
}

footer {
  font-size: smaller;

  border: var(--border-width) solid #ccc;
  border-radius: var(--border-radius);
}
footer > div {
  padding: 0.5rem;
}
address {
  font-style: inherit;
}
footer > div:last-child {
  background: #eee;
  border-top: var(--border-width) solid #ccc;
  padding: 0 1em 1em;
  border-bottom-right-radius: calc(var(--border-radius) - 1px);
  border-bottom-left-radius: calc(var(--border-radius) - 1px);
}

.input, .fake-input {
  font-size: 16px;
  font-size: max(16px, 1em);
  font-family: inherit;
  padding: 0.25em 0.5em;
  background-color: #fff;
  border: var(--border-width) solid var(--input-border);
  border-radius: var(--border-radius);
  box-sizing: border-box;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.18);
}

.input:focus, .button:focus {
  border-color: hsl(
    var(--input-focus-h),
    var(--input-focus-s),
    var(--input-focus-l)
  );
  box-shadow: 0 0 0 3px
    hsla(
      var(--input-focus-h),
      var(--input-focus-s),
      calc(var(--input-focus-l) + 40%),
      0.8
    );
  outline: 3px solid transparent;
}

.input:not(textarea) {
  line-height: 1;
  height: 2.25rem;
}

input[type="file"] {
  font-size: 0.9em;
  padding-top: 0.35rem;
}

textarea.input {
  resize: vertical;
}

.input[readonly] {
  border-style: dotted;
  cursor: not-allowed;
  color: #777;
}

.input[disabled] {
  --input-border: #ccc;

  background-color: #eee;
  cursor: not-allowed;
}

label {
  font-size: 1.125rem;
  font-weight: 500;
  line-height: 1;
}

label + .input, label + .select {
  margin-bottom: 1rem;
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
  padding: 0 1em 0 0;
  margin: 0;
  width: 100%;
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  z-index: 1;
  outline: none;
}
select::-ms-expand {
  display: none;
}

.select {
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  position: relative;
  min-width: 15ch;
  max-width: 30ch;
  border: 1px solid var(--select-border);
  border-radius: 0.25em;
  padding: 0.25em 0.5em;
  font-size: 1.25rem;
  cursor: pointer;
  line-height: 1.1;
  background-color: #fff;
  background-image: linear-gradient(to top, #f9f9f9, #fff 33%);
}
.select select, .select::after {
  grid-area: select;
}
.select:not(.select--multiple)::after {
  content: "";
  justify-self: end;
  width: 0.8em;
  height: 0.5em;
  background-color: var(--select-arrow);
  -webkit-clip-path: polygon(100% 0%, 0 0%, 50% 100%);
          clip-path: polygon(100% 0%, 0 0%, 50% 100%);
}

select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid var(--select-focus);
  border-radius: inherit;
}

select[multiple] {
  padding-right: 0;
  /*
   * Safari will not reveal an option
   * unless the select height has room to
   * show all of it
   * Firefox and Chrome allow showing
   * a partial option
   */
  height: 6rem;
  /*
   * Experimental - styling of selected options
   * in the multiselect
   * Not supported crossbrowser
   */
}
select[multiple] option {
  white-space: normal;
  outline-color: var(--select-focus);
}

.select--disabled {
  cursor: not-allowed;
  background-color: #eee;
  background-image: linear-gradient(to top, #ddd, #eee 33%);
}

.button {
  border: none;
  background-color: transparent;
  font-family: inherit;
  padding: 0;
  cursor: pointer;
  box-sizing: border-box;
}
@media screen and (-ms-high-contrast: active) {
  .button {
    border: 2px solid currentcolor;
  }
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  align-self: start;
  background-color: var(--primary-color);
  color: #fff;
  border-radius: var(--border-radius);
  padding: 0.25em 0.75em;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.18);
  min-width: 10ch;
  min-height: 36px;
  text-align: center;
  line-height: 1.1;
  transition: 220ms all ease-in-out;
}
.button.min {
  min-width: inherit;
}
.button.min:hover, .button:active {
  text-decoration: underline;
  background-color: #c05316;
}
a.button:link, a.button:visited {
  color: #fff;
}
.button.small {
  font-size: 0.85em;
}
.button.large {
  font-size: 1.15em;
}

.button.outline {
  background-color: #fff;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
}
a.button.outline:link, a.button.outline:visited {
  color: var(--primary-color);
}
.button[disabled] {
  --primary-color: #ccc;

  background-color: #eee;
  color: #999;
  cursor: not-allowed;
}

a:link, a:visited {
  color: var(--link-color);
  text-decoration: none;
}
a:hover, a:focus {
  color: var(--primary-color);
  text-decoration: underline;
}

.badge {
  padding: 0.25em 0.5em;
  margin-left: 0.5em;
  border-radius: calc(var(--border-radius) / 2);
  font-size: 0.8em;
  color: var(--primary-color);
  background-color: #fff;
}
.badge:empty {
  display: none;
}

.block {
  width: 100%;
}

.list-horizontal {
  padding: 0;
}
.list-horizontal li {
  display: inline-block;
}
.list-horizontal:not(.no-separator) li:after {
  content: '\00a0\00a0\2022\00a0\00a0';
}
.list-horizontal li:last-child:after {
  content: '';
}

hr {
  width: 100%;
  border-color: rgba(var(--primary-color-r),
                      var(--primary-color-g),
                      var(--primary-color-b),
                      0.2);
}

.pull-right {
  float: right;
}
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

.text-primary { color: var(--primary-color) }
.text-success { color: #3d9970; /* olive */ }
.text-important { color: #0038d9; /* blue */ }
.text-muted { color: #555; /* dark gray */ }
.text-danger { color: #800000; /* maroon */  }
.text-warning { color: #001f3f; /* navy */ }
.highlight { background-color: yellow }

.alert {
  padding: 1rem;
  margin-bottom: 1.25rem;
  border: 1px solid transparent; /* will re-color */
  border-radius: var(--border-radius);
}
.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6;
}
.alert-danger {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1;
}
.alert-warning {
  color: #8a6d3b;
  background-color: #fcf8e3;
  border-color: #faebcc;
}
.alert-info {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}

:is(h1, h2, h3) {
  line-height: 1.2;
}

:is(h2, h3):not(:first-child) {
  margin-top: 2em;
}

:is(h1, h2, h3, h4, h5) > small {
  font-weight: normal;
  color: #555;
}

h1.page-header {
  padding-bottom: 0.25em;
  border-bottom: 1px solid var(--light-primary-color);
}

nav#site-navigation {
  display: grid;
  place-content: center;
  grid-template-columns: auto 1fr auto auto auto;
  grid-column-gap: 0.25em;
  grid-row-gap: 1em;
}
nav#site-navigation #site-search {
  /* whole row to itself */
  grid-column: 1 / 6;
  grid-row: 2;
}
nav#site-navigation img {
  width: 100%;
}
nav#site-navigation #site-name {
  place-content: center;
}
nav#site-navigation #site-name img {
  vertical-align: text-top;
}
nav#site-navigation #site-info .label {
  display: none;
}
nav#site-navigation #site-search {
  display: grid;
  grid-template-columns: 1fr minmax(3em, auto);
}
nav#site-navigation #site-search > input {
  max-width: 100%;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
nav#site-navigation #site-search > .button {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  height: 100%;
}
/* Not sure why this is necessary */
nav#site-navigation .nav-button,
nav#site-navigation #site-wishlist .button,
nav#site-navigation #site-cart .button {
  padding: 0;
}
nav#site-navigation #site-depts {
  grid-column: 1 / 6;
  max-width: 100%;
}
nav#site-navigation #site-featured-depts {
  grid-column: 1 / 6;
  max-width: 100%;
}
nav#site-navigation #site-depts ul,
nav#site-navigation #site-featured-depts ul
{
  list-style: none;
  padding: 0.5em 0.75em;
  background: #eee;
  border: 1px solid #ccc;
  border-radius: var(--border-radius);
  overflow-x: auto;
  white-space: nowrap;
  margin: 0;
}
nav#site-navigation #site-depts ul
{
  mask-image: linear-gradient(90deg, #000 90%, transparent);
}
nav#site-navigation #site-depts ul li,
nav#site-navigation #site-featured-depts ul li {
  display: inline-flex;
}
nav#site-navigation #site-depts ul li:first-child:after {
  content: '\00a0\00a0';
}
nav#site-navigation #site-depts ul li:after,
nav#site-navigation #site-featured-depts ul li:after {
  content: '\00a0\00a0\2022\00a0\00a0';
}
nav#site-navigation #site-depts ul li:last-child:after,
nav#site-navigation #site-featured-depts ul li:last-child:after {
  content: '';
}
nav#site-navigation #site-about {
  display: none;
  grid-column: 1 / 6;
  max-width: 100%;
}

.panel {
  padding: 0.5em 0.75em;
  background: #eee;
  border: 1px solid #ccc;
  border-radius: var(--border-radius);
}

@media (max-width: 599.98px) {
  nav#site-navigation .button {
    font-size: 0.8em;
    padding: 0.1em 0.2em;
    border: var(--border-radius) solid transparent;
    place-content: center;
    min-width: unset;
    min-height: unset;
  }
  nav#site-navigation a.nav-button:link,
  nav#site-navigation a.nav-button:visited
  {
    background-color: white;
    color: var(--primary-color);
    box-shadow: none;
  }
  nav#site-navigation #site-depts,
  nav#site-navigation #site-featured-depts {
    display: none;
  }
  nav#site-navigation #site-depts ul {
    list-style: none;
    padding: 0.5em 0.75em;
    background: #eee;
    border: 1px solid #ccc;
    border-radius: var(--border-radius);
    overflow-x: inherit;
    white-space: inherit;
    mask-image: none;
  }
  nav#site-navigation #site-depts ul li {
    display: block;
  }
  nav#site-navigation #site-depts ul li:first-child:before {
    content: '';
  }
  nav#site-navigation #site-depts ul li:before {
    content: '\2014\00a0\00a0';
  }
  nav#site-navigation #site-depts ul li:after {
    content: '';
  }
}

@media (min-width: 600px) {
  nav#site-navigation {
    grid-template-columns: auto 1fr auto auto auto;
    grid-column-gap: 1em;
  }
  nav#site-navigation #site-dept-menu,
  nav#site-navigation #site-depts {
    display: none;
  }
  nav#site-navigation #site-name img {
    height: 2em;
    width: auto;
  }
  nav#site-navigation #site-search {
    grid-column: 2;
    grid-row: 1;
  }
  nav#site-navigation #site-info .label {
    display: inline;
  }
}

.bi-lg {
  font-size: 1.2em;
}
.bi-xl {
  font-size: 2.0em;
}
.lni + .label {
  margin-left: 0.25em;
}
.bi + .label {
  margin-left: 0.25em;
}
svg + .label {
  margin-left: 0.25em;
}

.button svg {
  margin-right: 0.25em;
}

.input-group {
  display: grid;
  grid-template-columns: min-content auto;
}
.input-group label {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  align-self: start;
  background-color: var(--primary-color);
  color: #fff;
  border: var(--border-width) solid var(--primary-color);
  border-radius: var(--border-radius);
  padding: 0.25em 0.5em;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.18);
  box-sizing: border-box;
  text-align: center;
  line-height: 1.1;

  border-top-right-radius: 0;
  border-bottom-right-radius: 0;

  height: 2.25rem;
}

.input-group .button.left {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.input-group input, .input-group .fake-input {
  max-width: 100%;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.stacked-form {
  display: grid;
  grid-gap: 0.5rem;
  margin: 0 0 1em 0;
}
.well {
  padding: 1em 1.5em;
  background: #eee;
  border: 1px solid #ccc;
  border-radius: var(--border-radius);
  margin-bottom: 2em;
}

p.lead {
  font-size: 1.25em;
  font-weight: 300;
  line-height: 1.4;
}

table {
  font-variant-numeric: tabular-nums;
}

.help-block {
  color: #3c763d;
}

.hr {
  overflow: hidden;
  text-align: center;
}

.hr:before,
.hr:after {
  background-color: rgba(var(--primary-color-r),
                          var(--primary-color-g),
                          var(--primary-color-b),
                          0.2);
  content: "";
  display: inline-block;
  height: var(--border-width);
  position: relative;
  vertical-align: middle;
  width: 50%;
}

.hr:before {
  right: 0.5em;
  margin-left: -50%;
}

.hr:after {
  left: 0.5em;
  margin-right: -50%;
}

.smol-grid {
  --min: 20ch;
  --gap: 1rem;

  display: grid;
  grid-gap: var(--gap);
  /* min() with 100% prevents overflow in extra narrow spaces */
  grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));

  margin: var(--gap) 0;

  /* ul.smol-grid gets wonky padding otherwise */
  padding: 0;
}

.smol-fill-grid {
  --min: 20ch;
  --gap: 1rem;

  display: grid;
  grid-gap: var(--gap);
  /* min() with 100% prevents overflow in extra narrow spaces */
  grid-template-columns: repeat(auto-fill, minmax(min(100%, var(--min)), 1fr));

  margin: var(--gap) 0;

  /* ul.smol-fill-grid gets wonky padding otherwise */
  padding: 0;
}


.input-radio, .input-checkbox {
  display: block;
  margin-bottom: 0.5em;

  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
}

.card {
  --img-ratio: 3/2;

  display: flex;
  flex-direction: column;
  box-shadow: 0.25em 0.25em 1em rgba(0, 0, 0, 0.35);
  border-radius: var(--border-radius);
}
.card.hot {
  cursor: pointer;
}

/* Soon we can replace this with: gap: 1rem; */
.card > * + * {
  margin-top: 1rem;
}

.card > img {
  /* Fallback for `aspect-ratio` of defining a height */
  height: max(18vh, 12rem);
  object-fit: cover;
  width: 100%;
}

/* When supported, use `aspect-ratio` */
@supports (aspect-ratio: 1) {
  .card > img {
    aspect-ratio: var(--img-ratio);
    height: auto;
  }
}

.card > img:first-child {
  border-radius: var(--border-radius) var(--border-radius) 0 0;
}

.card > img:last-child {
  border-radius: 0 0 var(--border-radius) var(--border-radius);
  margin-top: auto;
}

.card > :not(img) {
  margin-left: 1rem;
  margin-right: 1rem;
}

.card > :not(img):first-child {
  margin-top: 1rem;
}

/* Enhanced `:not()` accepts a selector list,
but as a fallback you can chain `:not()` instead */
.card > :last-of-type:not(img, h2, h3, h4) {
  margin-bottom: 1rem;
}

.card > :not(h2, h3, h4) {
  font-size: 0.9rem;
}

.card > button {
  align-self: center;
}

.card.hot:hover h3 {
  text-decoration: underline;
  color: var(--primary-color);
}
.card.hot:hover {
  box-shadow: 0.25em 0.25em 1em rgba(var(--primary-color-r), var(--primary-color-g), var(--primary-color-b), 0.8);
}

/* Based on
 * https://moderncss.dev/3-popular-website-heroes-created-with-css-grid-layout/
 * */
.hero {
  display: grid;
  grid-template-areas: "hero";
  align-items: center;
  background: #eee;
  border-radius: var(--border-radius);
  margin-bottom: 1.25em;
}
.hero > * {
  grid-area: hero;
}
.hero img {
  -o-object-fit: cover;
     object-fit: cover;
  width: 80%;
  transition: 180ms width ease-in;
  justify-self: end;
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}
@media (min-width: 60rem) {
  .hero img {
    width: 60%;
  }
}
.hero .hero__content {
  margin: 1em 0 1em 5%;
  max-width: 50%;
  min-width: 30ch;
  z-index: 1;
  background-color: rgba(238,238,238,0.8);
  border-radius: var(--border-radius);
  padding: 1rem 2rem 2rem 2rem;
  box-shadow: none;
}
.hero .hero__content h1 {
  font-size: 3rem;
  font-weight: 500;
  margin: 0 0 1rem;
}
.hero .hero__content p {
  font-size: 1.75rem;
}

.add-item .button {
  margin-bottom: 1em;
}

dialog {
  border: none;
  min-width: 80ch;
  background: inherit;
}
@media (max-width: 599.98px) {
  dialog {
    min-width: auto;
  }
}
dialog::backdrop {
  background: rgba(0, 0, 0, 0.25);
}
